import os

# use os.getenv and optionally cast types
flight_exp = os.getenv("FLIGHT", "lateral2")

GUIDED_FLIGHT = True # uses columns names for the guided flights
RUN_PROCESSED = False


processed_path = f"data/processed/{flight_exp}/"



onboard_path = f"data/raw/{flight_exp}/onboard-{flight_exp}.csv"
optitrack_path = f"data/raw/{flight_exp}/optitrack-{flight_exp}.csv"


if GUIDED_FLIGHT:
    optitrack_cols = [
        "time",
        "fbqx",
        "fbqy",
        "fbqz",
        "fbqw",
        "fbx",
        "fby",
        "fbz",
        "fb1x",
        "fb1y",
        "fb1z",
        "fb2x",
        "fb2y",
        "fb2z",
        "fb3x",
        "fb3y",
        "fb3z",
        "fb4x",
        "fb4y",
        "fb4z",
        "fb5x",
        "fb5y",
        "fb5z",
        "fb6x",
        "fb6y",
        "fb6z",
        "fblwqx",
        "fblwqy",
        "fblwqz",
        "fblwqw",
        "fblwx",
        "fblwy",
        "fblwz",
        "fblw1x",
        "fblw1y",
        "fblw1z",
        "fblw2x",
        "fblw2y",
        "fblw2z",
        "fblw3x",
        "fblw3y",
        "fblw3z",
        "fbrwqx",
        "fbrwqy",
        "fbrwqz",
        "fbrwqw",
        "fbrwx",
        "fbrwy",
        "fbrwz",
        "fbrw1x",
        "fbrw1y",
        "fbrw1z",
        "fbrw2x",
        "fbrw2y",
        "fbrw2z",
        "fbrw3x",
        "fbrw3y",
        "fbrw3z",
    ]

    onboard_cols = [
        "timestamp",
        "controller.pitch",
        "controller.roll",
        "controller.yaw",
        "controller.pitchRate",
        "controller.rollRate",
        "controller.yawRate",
        "controller.cmd_pitch",
        "controller.cmd_roll",
        "controller.cmd_yaw",
        "controller.cmd_thrust",
        "acc.x",
        "acc.y",
        "acc.z",
        "gyro.x",
        "gyro.y",
        "gyro.z",
        "locSrv.x",
        "locSrv.y",
        "locSrv.z",
        "locSrv.qx",
        "locSrv.qy",
        "locSrv.qz",
        "locSrv.qw",
    ]
else:
    optitrack_cols = [
        "time",
        "fbqx",
        "fbqy",
        "fbqz",
        "fbqw",
        "fbx",
        "fby",
        "fbz",
        "fb1x",
        "fb1y",
        "fb1z",
        "fb2x",
        "fb2y",
        "fb2z",
        "fb3x",
        "fb3y",
        "fb3z",
        "fb4x",
        "fb4y",
        "fb4z",
        "fb5x",
        "fb5y",
        "fb5z",
        "fbrwqx",
        "fbrwqy",
        "fbrwqz",
        "fbrwqw",
        "fbrwx",
        "fbrwy",
        "fbrwz",
        "fbrw1x",
        "fbrw1y",
        "fbrw1z",
        "fbrw2x",
        "fbrw2y",
        "fbrw2z",
        "fbrw3x",
        "fbrw3y",
        "fbrw3z",
        "fblwqx",
        "fblwqy",
        "fblwqz",
        "fblwqw",
        "fblwx",
        "fblwy",
        "fblwz",
        "fblw1x",
        "fblw1y",
        "fblw1z",
        "fblw2x",
        "fblw2y",
        "fblw2z",
        "fblw3x",
        "fblw3y",
        "fblw3z",
    ]

    onboard_cols = [
        "timestamp",
        "controller.pitch",
        "controller.roll",
        "controller.yaw",
        "controller.pitchRate",
        "controller.rollRate",
        "controller.yawRate",
        "controller.cmd_pitch",
        "controller.cmd_roll",
        "controller.cmd_yaw",
        "controller.cmd_thrust",
        "motor.m1",
        "motor.m2",
        "motor.m3",
        "motor.m4",
        "acc.x",
        "acc.y",
        "acc.z",
        "gyro.x",
        "gyro.y",
        "gyro.z",
    ]


print(optitrack_path)
